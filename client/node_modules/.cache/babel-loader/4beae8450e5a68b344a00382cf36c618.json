{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shubham/Desktop/blog/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/shubham/Desktop/blog/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/shubham/Desktop/blog/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/shubham/Desktop/blog/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/shubham/Desktop/blog/server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Avatar,Button,Paper,Grid,Typography,Container}from'@material-ui/core';import{GoogleLogin}from'react-google-login';import{useDispatch}from'react-redux';import{useHistory}from'react-router-dom';import Icon from'./icon';import useStyles from'./styles';import LockOutlinedIcon from'@material-ui/icons/LockOpenOutlined';import Input from'./Input';import{signin,signup}from'../../actions/auth';var initialState={firstName:\"\",lastName:\"\",email:\"\",password:\"\",confirmPassword:\"\"};var Auth=function Auth(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPassword=_useState2[0],setShowPassword=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isSignup=_useState4[0],setIsSignup=_useState4[1];var _useState5=useState(initialState),_useState6=_slicedToArray(_useState5,2),formData=_useState6[0],setFormData=_useState6[1];var classes=useStyles();var dispatch=useDispatch();var history=useHistory();var handleShowPassword=function handleShowPassword(){return setShowPassword(function(prevShowPassword){return!prevShowPassword;});};var handleSubmit=function handleSubmit(e){e.preventDefault();if(isSignup){dispatch(signup(formData,history));}else{dispatch(signin(formData,history));}};var handleChange=function handleChange(e){setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var switchMode=function switchMode(){setIsSignup(function(prevIsSignup){return!prevIsSignup;});setShowPassword(false);};var googleSuccess=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var result,token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=res===null||res===void 0?void 0:res.profileObj;token=res===null||res===void 0?void 0:res.tokenId;try{dispatch({type:\"AUTH\",data:{result:result,token:token}});history.push('/');}catch(error){console.log(error);}case 3:case\"end\":return _context.stop();}}},_callee);}));return function googleSuccess(_x){return _ref.apply(this,arguments);};}();var googleFailure=function googleFailure(error){console.log(error);console.log(\"Google Login Fail Try Again \");};return/*#__PURE__*/React.createElement(Container,{component:\"main\",maxWidth:\"xs\"},/*#__PURE__*/React.createElement(Paper,{classes:classes.paper,elevation:3},/*#__PURE__*/React.createElement(Avatar,{className:classes.avatar},/*#__PURE__*/React.createElement(LockOutlinedIcon,null)),/*#__PURE__*/React.createElement(Typography,{variant:\"h5\"},isSignup?'Sign Up':'Login'),/*#__PURE__*/React.createElement(\"form\",{className:classes.form,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},isSignup&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Input,{name:\"firstName\",label:\"First Name\",handleChange:handleChange,autoFocus:true,half:true}),/*#__PURE__*/React.createElement(Input,{name:\"lastName\",label:\"Last Name\",handleChange:handleChange,half:true})),/*#__PURE__*/React.createElement(Input,{name:\"email\",label:\"Email Adress\",handleChange:handleChange,type:\"email\"}),/*#__PURE__*/React.createElement(Input,{name:\"password\",label:\"Password\",handleChange:handleChange,type:showPassword?'text':'password',handleShowPassword:handleShowPassword}),isSignup&&/*#__PURE__*/React.createElement(Input,{name:\"confirmPassword\",label:\"Repeat Password\",handleChange:handleChange,type:\"password\"})),/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit},isSignup?'Sign Up':'Login'),/*#__PURE__*/React.createElement(GoogleLogin,{clientId:\"800540277562-iguicmero4rheqp4ldearitm0f8jbsn9.apps.googleusercontent.com\",render:function render(renderProps){return/*#__PURE__*/React.createElement(Button,{className:classes.googleButton,color:\"primary\",fullWidth:true,onClick:renderProps.onClick,disabled:renderProps.disabled,startIcon:/*#__PURE__*/React.createElement(Icon,null),variant:\"contained\"},\"Google Login\");},onSuccess:googleSuccess,onFailure:googleFailure,cookiePolicy:\"single_host_origin\"}),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"flex-end\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Button,{onClick:switchMode},isSignup?\"Already have an account ? Login\":\"Don't have an account ? Sign Up\"))))));};export default Auth;","map":{"version":3,"sources":["/Users/shubham/Desktop/blog/server/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useDispatch","useHistory","Icon","useStyles","LockOutlinedIcon","Input","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","formData","setFormData","classes","dispatch","history","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","push","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"8xBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAAQC,MAAR,CAAiBC,MAAjB,CAA0BC,KAA1B,CAAkCC,IAAlC,CAAyCC,UAAzC,CAAsDC,SAAtD,KAAsE,mBAAtE,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qCAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,OAAQC,MAAR,CAAiBC,MAAjB,KAA8B,oBAA9B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,SAAS,CAAG,EADK,CAEjBC,QAAQ,CAAG,EAFM,CAGjBC,KAAK,CAAG,EAHS,CAIjBC,QAAQ,CAAG,EAJM,CAKjBC,eAAe,CAAG,EALD,CAArB,CASA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACyBtB,QAAQ,CAAC,KAAD,CADjC,wCACRuB,YADQ,eACMC,eADN,8BAEgBxB,QAAQ,CAAC,KAAD,CAFxB,yCAERyB,QAFQ,eAECC,WAFD,8BAGiB1B,QAAQ,CAACgB,YAAD,CAHzB,yCAGRW,QAHQ,eAGEC,WAHF,eAIf,GAAMC,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CACA,GAAMmB,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CACA,GAAMuB,CAAAA,OAAO,CAAGtB,UAAU,EAA1B,CAEA,GAAMuB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAIR,CAAAA,eAAe,CAAC,SAACS,gBAAD,QAAqB,CAACA,gBAAtB,EAAD,CAAnB,EAA3B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAK,CACtBA,CAAC,CAACC,cAAF,GAEA,GAAGX,QAAH,CAAY,CACRK,QAAQ,CAACf,MAAM,CAAEY,QAAF,CAAWI,OAAX,CAAP,CAAR,CACH,CAFD,IAEM,CACFD,QAAQ,CAAChB,MAAM,CAACa,QAAD,CAAWI,OAAX,CAAP,CAAR,CAEH,CAEJ,CAVD,CAWA,GAAMM,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,CAAD,CAAK,CACtBP,WAAW,gCAAMD,QAAN,wBAAgBQ,CAAC,CAACG,MAAF,CAASC,IAAzB,CAA+BJ,CAAC,CAACG,MAAF,CAASE,KAAxC,GAAX,CAGH,CAJD,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAI,CACnBf,WAAW,CAAC,SAACgB,YAAD,QAAiB,CAACA,YAAlB,EAAD,CAAX,CACAlB,eAAe,CAAC,KAAD,CAAf,CAEH,CAJD,CAKA,GAAMmB,CAAAA,aAAa,0FAAG,iBAAOC,GAAP,mIACZC,MADY,CACHD,GADG,SACHA,GADG,iBACHA,GAAG,CAAEE,UADF,CAEZC,KAFY,CAEJH,GAFI,SAEJA,GAFI,iBAEJA,GAAG,CAAEI,OAFD,CAGlB,GAAI,CACAlB,QAAQ,CAAC,CAAEmB,IAAI,CAAG,MAAT,CAAiBC,IAAI,CAAG,CAACL,MAAM,CAANA,MAAD,CAAUE,KAAK,CAALA,KAAV,CAAxB,CAAD,CAAR,CACAhB,OAAO,CAACoB,IAAR,CAAa,GAAb,EACH,CAAC,MAAOC,KAAP,CAAc,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAEH,CATiB,sDAAH,kBAAbT,CAAAA,aAAa,4CAAnB,CAWA,GAAMY,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACH,KAAD,CAAS,CAC3BC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACAC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAEH,CAJD,CAMA,mBACI,oBAAC,SAAD,EAAW,SAAS,CAAG,MAAvB,CAA8B,QAAQ,CAAE,IAAxC,eACI,oBAAC,KAAD,EAAO,OAAO,CAAIzB,OAAO,CAAC2B,KAA1B,CAAiC,SAAS,CAAI,CAA9C,eACI,oBAAC,MAAD,EAAQ,SAAS,CAAI3B,OAAO,CAAC4B,MAA7B,eACI,oBAAC,gBAAD,MADJ,CADJ,cAII,oBAAC,UAAD,EAAY,OAAO,CAAG,IAAtB,EAA4BhC,QAAQ,CAAG,SAAH,CAAe,OAAnD,CAJJ,cAKI,4BAAM,SAAS,CAAII,OAAO,CAAC6B,IAA3B,CAAiC,QAAQ,CAAIxB,YAA7C,eACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAI,CAA3B,EACMT,QAAQ,eACN,qDACI,oBAAC,KAAD,EAAO,IAAI,CAAG,WAAd,CAA0B,KAAK,CAAG,YAAlC,CAA+C,YAAY,CAAIY,YAA/D,CAA6E,SAAS,KAAtF,CAAuF,IAAI,KAA3F,EADJ,cAEI,oBAAC,KAAD,EAAO,IAAI,CAAG,UAAd,CAAyB,KAAK,CAAG,WAAjC,CAA6C,YAAY,CAAIA,YAA7D,CAA4E,IAAI,KAAhF,EAFJ,CAFR,cAQI,oBAAC,KAAD,EAAO,IAAI,CAAG,OAAd,CAAsB,KAAK,CAAG,cAA9B,CAA6C,YAAY,CAAGA,YAA5D,CAA0E,IAAI,CAAG,OAAjF,EARJ,cASI,oBAAC,KAAD,EAAO,IAAI,CAAG,UAAd,CAAyB,KAAK,CAAG,UAAjC,CAA4C,YAAY,CAAIA,YAA5D,CAA0E,IAAI,CAAId,YAAY,CAAG,MAAH,CAAY,UAA1G,CAAsH,kBAAkB,CAAIS,kBAA5I,EATJ,CAUMP,QAAQ,eAAI,oBAAC,KAAD,EAAO,IAAI,CAAG,iBAAd,CAAgC,KAAK,CAAG,iBAAxC,CAA0D,YAAY,CAAGY,YAAzE,CAAuF,IAAI,CAAG,UAA9F,EAVlB,CADJ,cAaI,oBAAC,MAAD,EAAQ,IAAI,CAAG,QAAf,CAAwB,SAAS,KAAjC,CAAkC,OAAO,CAAG,WAA5C,CAAwD,KAAK,CAAE,SAA/D,CAAyE,SAAS,CAAIR,OAAO,CAAC8B,MAA9F,EACKlC,QAAQ,CAAG,SAAH,CAAe,OAD5B,CAbJ,cAgBI,oBAAC,WAAD,EACI,QAAQ,CAAG,0EADf,CAEI,MAAM,CAAI,gBAACmC,WAAD,qBACN,oBAAC,MAAD,EAAQ,SAAS,CAAI/B,OAAO,CAACgC,YAA7B,CAA2C,KAAK,CAAG,SAAnD,CAA6D,SAAS,KAAtE,CAAuE,OAAO,CAAED,WAAW,CAACE,OAA5F,CAAqG,QAAQ,CAAIF,WAAW,CAACG,QAA7H,CAAuI,SAAS,cAAG,oBAAC,IAAD,MAAnJ,CAA2J,OAAO,CAAG,WAArK,iBADM,EAFd,CAOI,SAAS,CAAIpB,aAPjB,CAQI,SAAS,CAAGY,aARhB,CASI,YAAY,CAAG,oBATnB,EAhBJ,cA6BI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAG,UAA1B,eACI,oBAAC,IAAD,EAAM,IAAI,KAAV,eACI,oBAAC,MAAD,EAAQ,OAAO,CAAId,UAAnB,EACKhB,QAAQ,CAAG,iCAAH,CAAuC,iCADpD,CADJ,CADJ,CA7BJ,CALJ,CADJ,CADJ,CAgDH,CAhGD,CAkGA,cAAeH,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport {Avatar , Button , Paper , Grid , Typography , Container} from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux';\nimport {useHistory} from 'react-router-dom'\n\n\nimport Icon from './icon'\n\nimport useStyles from './styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOpenOutlined'\nimport Input from './Input'\nimport {signin , signup} from '../../actions/auth'\n\nconst initialState = {\n    firstName : \"\",\n    lastName : \"\",\n    email : \"\",\n    password : \"\",\n    confirmPassword : \"\"\n\n}\n\nconst Auth = () => {\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignup,setIsSignup] = useState(false)\n    const [formData, setFormData] = useState(initialState)\n    const classes = useStyles();\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const handleShowPassword = ()=>setShowPassword((prevShowPassword)=> !prevShowPassword)\n\n    const handleSubmit = (e)=>{\n        e.preventDefault()\n\n        if(isSignup){\n            dispatch(signup( formData,history))\n        }else {\n            dispatch(signin(formData ,history))\n\n        }\n\n    }\n    const handleChange = (e)=>{\n        setFormData({ ...formData,[e.target.name]:e.target.value});\n\n\n    }\n    const switchMode = ()=>{\n        setIsSignup((prevIsSignup)=> !prevIsSignup)\n        setShowPassword(false)\n\n    }\n    const googleSuccess = async (res)=>{\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n        try {\n            dispatch({ type : \"AUTH\", data : {result , token} })\n            history.push('/')\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n    const googleFailure = (error)=>{\n        console.log(error);\n        console.log(\"Google Login Fail Try Again \");\n\n    }\n  \n    return (\n        <Container component = 'main' maxWidth ='xs'>\n            <Paper classes = {classes.paper} elevation = {3}>\n                <Avatar className = {classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography variant = 'h5'>{isSignup ? 'Sign Up' : 'Login'}</Typography>\n                <form className = {classes.form} onSubmit = {handleSubmit}>\n                    <Grid container spacing = {2} >\n                        { isSignup && (\n                            <>\n                                <Input name = 'firstName' label = 'First Name' handleChange = {handleChange} autoFocus half/>\n                                <Input name = 'lastName' label = 'Last Name' handleChange = {handleChange}  half/>  \n                            </>\n                            \n                        )}\n                        <Input name = 'email' label = \"Email Adress\" handleChange= {handleChange} type = 'email'/>\n                        <Input name = 'password' label = \"Password\" handleChange = {handleChange} type = {showPassword ? 'text' : 'password'} handleShowPassword = {handleShowPassword}/>\n                        { isSignup && <Input name = 'confirmPassword' label = \"Repeat Password\" handleChange= {handleChange} type = 'password'/>} \n                    </Grid>\n                    <Button type = 'submit' fullWidth variant = 'contained' color ='primary' className = {classes.submit}  >\n                        {isSignup ? 'Sign Up' : 'Login'}\n                    </Button>\n                    <GoogleLogin\n                        clientId = '800540277562-iguicmero4rheqp4ldearitm0f8jbsn9.apps.googleusercontent.com'\n                        render = {(renderProps)=>(\n                            <Button className = {classes.googleButton} color = 'primary' fullWidth onClick={renderProps.onClick} disabled = {renderProps.disabled} startIcon = <Icon/> variant = 'contained' >\n                                Google Login\n                            </Button>\n                        )}\n                        onSuccess = {googleSuccess}\n                        onFailure ={googleFailure}\n                        cookiePolicy = \"single_host_origin\"\n\n                    />\n                   \n                    <Grid container justify = 'flex-end'>\n                        <Grid item>\n                            <Button onClick = {switchMode} >\n                                {isSignup ? \"Already have an account ? Login\" : \"Don't have an account ? Sign Up\"}\n                            </Button>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}