{"ast":null,"code":"var _jsxFileName = \"/Users/shubham/Desktop/blog/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login';\nimport { useDispatch } from 'react-redux';\nimport Icon from './icon';\nimport useStyles from './styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOpenOutlined';\nimport Input from './Input';\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google Login Fail Try Again \");\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    classes: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign Up' : 'Login'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Adress\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 39\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign Up' : 'Login'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"800540277562-iguicmero4rheqp4ldearitm0f8jbsn9.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 176\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Google Login\"),\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, isSignup ? \"Already have an account ? Login\" : \"Don't have an account ? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/Users/shubham/Desktop/blog/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","GoogleLogin","useDispatch","Icon","useStyles","LockOutlinedIcon","Input","Auth","showPassword","setShowPassword","isSignup","setIsSignup","classes","dispatch","handleShowPassword","prevShowPassword","handleSubmit","handleChange","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Avatar , Button , Paper , Grid , Typography , Container} from '@material-ui/core';\nimport { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux';\n\n\nimport Icon from './icon'\n\nimport useStyles from './styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOpenOutlined'\nimport Input from './Input'\n\nconst Auth = () => {\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignup,setIsSignup] = useState(false)\n    const classes = useStyles();\n    const dispatch = useDispatch()\n\n    const handleShowPassword = ()=>setShowPassword((prevShowPassword)=> !prevShowPassword)\n\n    const handleSubmit = ()=>{\n\n    }\n    const handleChange = ()=>{\n\n    }\n    const switchMode = ()=>{\n        setIsSignup((prevIsSignup)=> !prevIsSignup)\n        handleShowPassword(false)\n\n    }\n    const googleSuccess = async (res)=>{\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n        try {\n            dispatch({ type : \"AUTH\", data : {result , token} })\n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n    const googleFailure = (error)=>{\n        console.log(error);\n        console.log(\"Google Login Fail Try Again \");\n\n    }\n  \n    return (\n        <Container component = 'main' maxWidth ='xs'>\n            <Paper classes = {classes.paper} elevation = {3}>\n                <Avatar className = {classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography variant = 'h5'>{isSignup ? 'Sign Up' : 'Login'}</Typography>\n                <form className = {classes.form} onSubmit = {handleSubmit}>\n                    <Grid container spacing = {2} >\n                        { isSignup && (\n                            <>\n                                <Input name = 'firstName' label = 'First Name' handleChange = {handleChange} autoFocus half/>\n                                <Input name = 'lastName' label = 'Last Name' handleChange = {handleChange}  half/>  \n                            </>\n                            \n                        )}\n                        <Input name = 'email' label = \"Email Adress\" handleChange= {handleChange} type = 'email'/>\n                        <Input name = 'password' label = \"Password\" handleChange = {handleChange} type = {showPassword ? 'text' : 'password'} handleShowPassword = {handleShowPassword}/>\n                        { isSignup && <Input name = 'confirmPassword' label = \"Repeat Password\" handleChange= {handleChange} type = 'password'/>} \n                    </Grid>\n                    <Button type = 'submit' fullWidth variant = 'contained' color ='primary' className = {classes.submit}  >\n                        {isSignup ? 'Sign Up' : 'Login'}\n                    </Button>\n                    <GoogleLogin\n                        clientId = '800540277562-iguicmero4rheqp4ldearitm0f8jbsn9.apps.googleusercontent.com'\n                        render = {(renderProps)=>(\n                            <Button className = {classes.googleButton} color = 'primary' fullWidth onClick={renderProps.onClick} disabled = {renderProps.disabled} startIcon = <Icon/> variant = 'contained' >\n                                Google Login\n                            </Button>\n                        )}\n                        onSuccess = {googleSuccess}\n                        onFailure ={googleFailure}\n                        cookiePolicy = \"single_host_origin\"\n\n                    />\n                   \n                    <Grid container justify = 'flex-end'>\n                        <Grid item>\n                            <Button onClick = {switchMode} >\n                                {isSignup ? \"Already have an account ? Login\" : \"Don't have an account ? Sign Up\"}\n                            </Button>\n                        </Grid>\n\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}